package com.task.dev.security;

import java.io.IOException;
import java.util.Collections;

import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

import com.fasterxml.jackson.databind.ObjectMapper;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

public class JWTAuthenticationFilter extends UsernamePasswordAuthenticationFilter{
	
	 @Override
	public Authentication attemptAuthentication(HttpServletRequest request, HttpServletResponse response)
			throws AuthenticationException {
		 
		 AuthCredentials authCredentials = new AuthCredentials();
		 
		 try {
			authCredentials = new ObjectMapper().readValue(request.getHeader(), AuthCredentials.class);
		} catch (IOException e) {
			// TODO: handle exception
		}
		 
		 
		 UsernamePasswordAuthenticationToken usernamePAT = new UsernamePasswordAuthenticationToken(
				  authCredentials.getEmail(), 
				  authCredentials.getPassword(),
				  Collections.emptyList());
		 
		return getAuthenticationManager().authenticate(usernamePAT);
	}

}
